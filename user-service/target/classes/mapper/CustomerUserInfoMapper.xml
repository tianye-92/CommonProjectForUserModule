<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brandslink.cloud.user.mapper.CustomerUserInfoMapper">

    <resultMap id="BaseResultMap" type="com.brandslink.cloud.user.entity.CustomerUserInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="enabled" jdbcType="INTEGER" property="enabled"/>
        <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone"/>
        <result column="contact_way" jdbcType="VARCHAR" property="contactWay"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="customer_id" jdbcType="INTEGER" property="customerId"/>
        <result column="Email" jdbcType="VARCHAR" property="email"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="reserve1" jdbcType="VARCHAR" property="reserve1"/>
        <result column="reserve2" jdbcType="VARCHAR" property="reserve2"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_code" jdbcType="VARCHAR" property="roleCode"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, account, password, name, enabled, contact_phone, contact_way, type, customer_id,
        Email, create_by, create_time, last_update_by, last_update_time, reserve1, reserve2
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer_user_info
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_customer_user_info
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.brandslink.cloud.user.entity.CustomerUserInfo">
        insert into t_customer_user_info (id, account, password,
            name, enabled, contact_phone,
            contact_way, type, customer_id,
            Email, create_by, create_time,
            last_update_by, last_update_time, reserve1,
            reserve2)
        values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, #{contactPhone,jdbcType=VARCHAR},
            #{contactWay,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER},
            #{email,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
            #{lastUpdateBy,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{reserve1,jdbcType=VARCHAR},
            #{reserve2,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.brandslink.cloud.user.entity.CustomerUserInfo"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_customer_user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="contactPhone != null">
                contact_phone,
            </if>
            <if test="contactWay != null">
                contact_way,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="email != null">
                Email,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastUpdateBy != null">
                last_update_by,
            </if>
            <if test="lastUpdateTime != null">
                last_update_time,
            </if>
            <if test="reserve1 != null">
                reserve1,
            </if>
            <if test="reserve2 != null">
                reserve2,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=INTEGER},
            </if>
            <if test="contactPhone != null">
                #{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="contactWay != null">
                #{contactWay,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateBy != null">
                #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null">
                #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reserve1 != null">
                #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null">
                #{reserve2,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.brandslink.cloud.user.entity.CustomerUserInfo"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        update t_customer_user_info
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
            <if test="contactPhone != null">
                contact_phone = #{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="contactWay != null">
                contact_way = #{contactWay,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                Email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateBy != null">
                last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reserve1 != null">
                reserve1 = #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null">
                reserve2 = #{reserve2,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.brandslink.cloud.user.entity.CustomerUserInfo">
        update t_customer_user_info
        set account = #{account,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            enabled = #{enabled,jdbcType=INTEGER},
            contact_phone = #{contactPhone,jdbcType=VARCHAR},
            contact_way = #{contactWay,jdbcType=VARCHAR},
            type = #{type,jdbcType=INTEGER},
            customer_id = #{customerId,jdbcType=INTEGER},
            Email = #{email,jdbcType=VARCHAR},
            create_by = #{createBy,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
            last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            reserve1 = #{reserve1,jdbcType=VARCHAR},
            reserve2 = #{reserve2,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="page" parameterType="com.brandslink.cloud.user.entity.CustomerUserInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer_user_info
        <trim prefix="where" prefixOverrides="and">
            <if test="id != null and id != ''">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="account != null and account != ''">
                and account = #{account,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != ''">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name != ''">
                and name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="enabled != null and enabled != ''">
                and enabled = #{enabled,jdbcType=INTEGER}
            </if>
            <if test="contactPhone != null and contactPhone != ''">
                and contact_phone = #{contactPhone,jdbcType=VARCHAR}
            </if>
            <if test="contactWay != null and contactWay != ''">
                and contact_way = #{contactWay,jdbcType=VARCHAR}
            </if>
            <if test="type != null and type != ''">
                and type = #{type,jdbcType=INTEGER}
            </if>
            <if test="customerId != null and customerId != ''">
                and customer_id = #{customerId,jdbcType=INTEGER}
            </if>
            <if test="email != null and email != ''">
                and Email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null and createTime != ''">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lastUpdateBy != null and lastUpdateBy != ''">
                and last_update_by = #{lastUpdateBy,jdbcType=VARCHAR}
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime != ''">
                and last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reserve1 != null and reserve1 != ''">
                and reserve1 = #{reserve1,jdbcType=VARCHAR}
            </if>
            <if test="reserve2 != null and reserve2 != ''">
                and reserve2 = #{reserve2,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <select id="selectByAccountResult" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        u.*,r.id role_code,r.role_name
        from t_customer_user_info u
        left join t_customer_user_role_info t on u.id = t.user_id
        left join t_customer_role_info r on t.role_id = r.id
        where u.account = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer_user_info
        where account = #{account,jdbcType=VARCHAR}
    </select>

    <select id="selectByMobileResult" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        u.*,r.id role_code,r.role_name
        from t_customer_user_info u
        left join t_customer_user_role_info t on u.id = t.user_id
        left join t_customer_role_info r on t.role_id = r.id
        where u.contact_phone = #{mobile,jdbcType=VARCHAR}
    </select>

    <select id="selectByContactWay" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer_user_info
        where contact_phone = #{mobile,jdbcType=VARCHAR}
    </select>
    <select id="selectCustomerIdByPrimaryKey" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select customer_id from t_customer_user_info where id = #{id,jdbcType=INTEGER}
    </select>

    <!--账号信息查询（支持分页,用户名模糊搜索且不包含密码）-->
    <select id="selectAccountDetail" resultType="com.brandslink.cloud.user.dto.response.CustomerUserInfoResponseDTO"
            parameterType="com.brandslink.cloud.user.dto.request.CustomerAccountRequestDTO">
        select
        id, account, `name`, enabled, contact_phone contactPhone, `type`,
        Email, create_by createBy, create_time createTime, last_update_by lastUpdateBy, last_update_time lastUpdateTime
        from t_customer_user_info
        <trim prefix="where" prefixOverrides="and">
            <if test="account != null and account != ''">
                and account = #{account,jdbcType=VARCHAR}
            </if>
            <if test="name != null and name != ''">
                and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="enabled != null">
                and enabled = #{enabled,jdbcType=INTEGER}
            </if>
            <if test="customerId != null">
                and customer_id = #{customerId,jdbcType=INTEGER}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy,jdbcType=VARCHAR}
            </if>
            <if test="createTimeStart != null">
                and create_time &gt; #{createTimeStart,jdbcType=TIMESTAMP}
            </if>
            <if test="createTimeEnd != null">
                and create_time &lt;= #{createTimeEnd,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTimeStart != null">
                and last_update_time &gt; #{updateTimeStart,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTimeEnd != null">
                and last_update_time &lt;= #{updateTimeEnd,jdbcType=TIMESTAMP}
            </if>
            <if test="lastUpdateBy != null and lastUpdateBy != ''">
                and last_update_by = #{lastUpdateBy,jdbcType=VARCHAR}
            </if>
        </trim>
        <choose>
            <when test="order == 'asc'">
                ORDER BY #{orderField} ASC
            </when>
            <when test="order == 'desc'">
                ORDER BY #{orderField} DESC
            </when>
        </choose>
    </select>

    <!--根据用户名获取获取仓库-->
    <select id="selectWarehouseByAccount" resultType="java.util.Map" parameterType="java.lang.String">
        SELECT b.warehouse_code as warehouseCode, b.warehouse_name as warehouseName FROM t_customer_user_info a
        INNER JOIN t_customer_warehouse_info b ON a.customer_id = b.customer_id
        WHERE a.account = #{account}
    </select>
    <select id="selectPrimaryAccountIdByCustomerId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select id from t_customer_user_info where customer_id = #{customerId,jdbcType=INTEGER} and type = 0
    </select>

    <!--重置用户密码-->
    <update id="restorePassword">
        UPDATE t_customer_user_info set password = #{password,jdbcType=VARCHAR} where id = #{userId,jdbcType=INTEGER}
    </update>

    <!--更新账号状态-->
    <update id="updateAccountStatus">
        update t_customer_user_info set enabled = #{status, jdbcType=INTEGER} where id = #{userId,jdbcType=INTEGER}
    </update>

</mapper>