<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brandslink.cloud.user.mapper.CustomerRoleInfoMapper">

    <resultMap id="BaseResultMap" type="com.brandslink.cloud.user.entity.CustomerRoleInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="customer_id" jdbcType="INTEGER" property="customerId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_description" jdbcType="VARCHAR" property="roleDescription"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="reserve1" jdbcType="VARCHAR" property="reserve1"/>
        <result column="reserve2" jdbcType="VARCHAR" property="reserve2"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, customer_id, role_name, role_description, create_by, create_time, last_update_by,
        last_update_time, reserve1, reserve2
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer_role_info
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_customer_role_info
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.brandslink.cloud.user.entity.CustomerRoleInfo">
        insert into t_customer_role_info (id, customer_id, role_name,
            role_description, create_by, create_time,
            last_update_by, last_update_time, reserve1,
            reserve2)
        values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
            #{roleDescription,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
            #{lastUpdateBy,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{reserve1,jdbcType=VARCHAR},
            #{reserve2,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.brandslink.cloud.user.entity.CustomerRoleInfo"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into t_customer_role_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDescription != null">
                role_description,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastUpdateBy != null">
                last_update_by,
            </if>
            <if test="lastUpdateTime != null">
                last_update_time,
            </if>
            <if test="reserve1 != null">
                reserve1,
            </if>
            <if test="reserve2 != null">
                reserve2,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDescription != null">
                #{roleDescription,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateBy != null">
                #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null">
                #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reserve1 != null">
                #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null">
                #{reserve2,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.brandslink.cloud.user.entity.CustomerRoleInfo">
        update t_customer_role_info
        <set>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDescription != null">
                role_description = #{roleDescription,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateBy != null">
                last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reserve1 != null">
                reserve1 = #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null">
                reserve2 = #{reserve2,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.brandslink.cloud.user.entity.CustomerRoleInfo">
        update t_customer_role_info
        set customer_id = #{customerId,jdbcType=INTEGER},
            role_name = #{roleName,jdbcType=VARCHAR},
            role_description = #{roleDescription,jdbcType=VARCHAR},
            create_by = #{createBy,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
            last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            reserve1 = #{reserve1,jdbcType=VARCHAR},
            reserve2 = #{reserve2,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="page" parameterType="com.brandslink.cloud.user.entity.CustomerRoleInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer_role_info
        <trim prefix="where" prefixOverrides="and">
            <if test="id != null and id != ''">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="customerId != null and customerId != ''">
                and customer_id = #{customerId,jdbcType=INTEGER}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="roleDescription != null and roleDescription != ''">
                and role_description = #{roleDescription,jdbcType=VARCHAR}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null and createTime != ''">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lastUpdateBy != null and lastUpdateBy != ''">
                and last_update_by = #{lastUpdateBy,jdbcType=VARCHAR}
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime != ''">
                and last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reserve1 != null and reserve1 != ''">
                and reserve1 = #{reserve1,jdbcType=VARCHAR}
            </if>
            <if test="reserve2 != null and reserve2 != ''">
                and reserve2 = #{reserve2,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <select id="getRoleListByMenuUrl" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
        role_menu.role_id
        from t_customer_role_menu_info role_menu
        JOIN t_menu_info menu on role_menu.menu_id = menu.id and menu.type = 1 and role_menu.belong = 0
        WHERE menu.url like concat('%', #{requestUrl,jdbcType=VARCHAR}, '%')
    </select>

    <select id="selectMenuUrlByRoleList" parameterType="java.util.List" resultType="java.lang.String">
        select menu.url
        from t_customer_role_menu_info role_menu
        JOIN t_menu_info menu on role_menu.menu_id = menu.id and menu.type = 1 and role_menu.belong = 0
        WHERE role_menu.role_id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        and menu.url like '%*%'
    </select>

    <select id="selectByUserIdList" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        r.id,r.role_name,ur.user_id customer_id
        from t_customer_user_role_info ur
        left join t_customer_role_info r on r.id = ur.role_id
        where ur.user_id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="selectRoleList" parameterType="com.brandslink.cloud.user.dto.request.CustomerRoleRequestDTO"
            resultType="com.brandslink.cloud.user.dto.response.CustomerRoleInfoResponseDTO">
        select
        id, role_name roleName, role_description roleDescription, create_by createBy, create_time createTime,
        last_update_by lastUpdateBy, last_update_time lastUpdateTime
        from t_customer_role_info
        <trim prefix="where" prefixOverrides="and">
            <if test="roleName != null and roleName != ''">
                and role_name like CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
            </if>
            <if test="customerId != null">
                and customer_id = #{customerId,jdbcType=INTEGER}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy,jdbcType=VARCHAR}
            </if>
            <if test="lastUpdateBy != null and lastUpdateBy != ''">
                and last_update_by = #{lastUpdateBy,jdbcType=VARCHAR}
            </if>
            <if test="createTimeStart != null">
                and create_time &gt; #{createTimeStart,jdbcType=TIMESTAMP}
            </if>
            <if test="createTimeEnd != null">
                and create_time &lt;= #{createTimeEnd,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTimeStart != null">
                and last_update_time &gt; #{updateTimeStart,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTimeEnd != null">
                and last_update_time &lt;= #{updateTimeEnd,jdbcType=TIMESTAMP}
            </if>
        </trim>
        ORDER BY create_time DESC
    </select>
    <select id="selectByRoleName" resultType="java.lang.Integer">
        select
        count(1)
        from t_customer_role_info
        where role_name = #{roleName,jdbcType=VARCHAR} and customer_id = #{customerId,jdbcType=INTEGER}
    </select>
    <select id="selectInitializeRoleId" resultType="java.lang.Integer">
        select id from t_customer_role_info where customer_id = #{flag,jdbcType=INTEGER}
    </select>

    <select id="selectMenusByRoleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select
        menu_id
        from t_customer_role_menu_info rm
        left join t_menu_info m
        on m.id = rm.menu_id
        where rm.role_id = #{id,jdbcType=INTEGER}
        and m.type = 1
        and rm.belong = #{flag,jdbcType=INTEGER}
    </select>

    <select id="selectMenusByRoleIdAll" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select
        menu_id
        from t_customer_role_menu_info rm
        left join t_menu_info m
        on m.id = rm.menu_id
        where rm.role_id = #{id,jdbcType=INTEGER}
        and rm.belong = #{flag,jdbcType=INTEGER}
    </select>

    <!--新增用户对应的角色-->
    <insert id="insertCustomerAccountRole">
        insert into t_customer_user_role_info (user_id, role_id)
        value
        <foreach collection="roleIds" index="index" item="item" separator=",">
            (#{userId},#{item})
        </foreach>
    </insert>

    <insert id="insertMenusByRoleId">
        insert into t_customer_role_menu_info(role_id,menu_id,belong)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{roleId,jdbcType=INTEGER},#{item,jdbcType=INTEGER},#{flag,jdbcType=INTEGER})
        </foreach>
    </insert>

    <!--根据账号删除角色-->
    <delete id="deleteCustomerRoleByAccountId" parameterType="java.lang.Integer">
        DELETE FROM t_customer_user_role_info WHERE	user_id = #{userId}
    </delete>

    <delete id="deleteMenusByRoleId" parameterType="java.lang.Integer">
        delete from t_customer_role_menu_info
        where role_id = #{roleId,jdbcType=INTEGER} and belong = #{flag,jdbcType=INTEGER}
    </delete>

</mapper>